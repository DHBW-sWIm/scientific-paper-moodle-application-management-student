<?php
/**
 * BpmnModelTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * sWIm Activiti REST API
 *
 * here be dragons
 *
 * OpenAPI spec version: v0.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * BpmnModelTest Class Doc Comment
 *
 * @category    Class */
// * @description BpmnModel
/**
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class BpmnModelTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "BpmnModel"
     */
    public function testBpmnModel()
    {
    }

    /**
     * Test attribute "definitions_attributes"
     */
    public function testPropertyDefinitionsAttributes()
    {
    }

    /**
     * Test attribute "processes"
     */
    public function testPropertyProcesses()
    {
    }

    /**
     * Test attribute "location_map"
     */
    public function testPropertyLocationMap()
    {
    }

    /**
     * Test attribute "label_location_map"
     */
    public function testPropertyLabelLocationMap()
    {
    }

    /**
     * Test attribute "flow_location_map"
     */
    public function testPropertyFlowLocationMap()
    {
    }

    /**
     * Test attribute "signals"
     */
    public function testPropertySignals()
    {
    }

    /**
     * Test attribute "pools"
     */
    public function testPropertyPools()
    {
    }

    /**
     * Test attribute "imports"
     */
    public function testPropertyImports()
    {
    }

    /**
     * Test attribute "interfaces"
     */
    public function testPropertyInterfaces()
    {
    }

    /**
     * Test attribute "global_artifacts"
     */
    public function testPropertyGlobalArtifacts()
    {
    }

    /**
     * Test attribute "resources"
     */
    public function testPropertyResources()
    {
    }

    /**
     * Test attribute "target_namespace"
     */
    public function testPropertyTargetNamespace()
    {
    }

    /**
     * Test attribute "source_system_id"
     */
    public function testPropertySourceSystemId()
    {
    }

    /**
     * Test attribute "user_task_form_types"
     */
    public function testPropertyUserTaskFormTypes()
    {
    }

    /**
     * Test attribute "start_event_form_types"
     */
    public function testPropertyStartEventFormTypes()
    {
    }

    /**
     * Test attribute "errors"
     */
    public function testPropertyErrors()
    {
    }

    /**
     * Test attribute "messages"
     */
    public function testPropertyMessages()
    {
    }

    /**
     * Test attribute "item_definitions"
     */
    public function testPropertyItemDefinitions()
    {
    }

    /**
     * Test attribute "main_process"
     */
    public function testPropertyMainProcess()
    {
    }

    /**
     * Test attribute "message_flows"
     */
    public function testPropertyMessageFlows()
    {
    }

    /**
     * Test attribute "data_stores"
     */
    public function testPropertyDataStores()
    {
    }

    /**
     * Test attribute "namespaces"
     */
    public function testPropertyNamespaces()
    {
    }
}
