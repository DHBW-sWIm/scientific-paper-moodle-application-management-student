<?php
/**
 * JobsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * sWIm Activiti REST API
 *
 * here be dragons
 *
 * OpenAPI spec version: v0.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use \Swagger\Client\Configuration;
use \Swagger\Client\ApiException;
use \Swagger\Client\ObjectSerializer;

/**
 * JobsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache License v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class JobsApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for deleteDeadLetterJob
     *
     * Delete a deadletter job.
     *
     */
    public function testDeleteDeadLetterJob()
    {
    }

    /**
     * Test case for deleteJob
     *
     * Delete a job.
     *
     */
    public function testDeleteJob()
    {
    }

    /**
     * Test case for deleteTimerJob
     *
     * Delete a timer job.
     *
     */
    public function testDeleteTimerJob()
    {
    }

    /**
     * Test case for executeJobAction
     *
     * Execute a single job.
     *
     */
    public function testExecuteJobAction()
    {
    }

    /**
     * Test case for getDeadLetterJobStacktrace
     *
     * Get the exception stacktrace for a deadletter job.
     *
     */
    public function testGetDeadLetterJobStacktrace()
    {
    }

    /**
     * Test case for getDeadletterJob
     *
     * Get a single deadletter job.
     *
     */
    public function testGetDeadletterJob()
    {
    }

    /**
     * Test case for getJob
     *
     * Get a single job.
     *
     */
    public function testGetJob()
    {
    }

    /**
     * Test case for getJobStacktrace
     *
     * Get the exception stacktrace for a job.
     *
     */
    public function testGetJobStacktrace()
    {
    }

    /**
     * Test case for getSuspendedJob
     *
     * Get a single suspended job.
     *
     */
    public function testGetSuspendedJob()
    {
    }

    /**
     * Test case for getSuspendedJobStacktrace
     *
     * Get the exception stacktrace for a suspended job.
     *
     */
    public function testGetSuspendedJobStacktrace()
    {
    }

    /**
     * Test case for getTimerJob
     *
     * Get a single timer job.
     *
     */
    public function testGetTimerJob()
    {
    }

    /**
     * Test case for getTimerJobStacktrace
     *
     * Get the exception stacktrace for a timer job.
     *
     */
    public function testGetTimerJobStacktrace()
    {
    }

    /**
     * Test case for listDeadLetterJobs
     *
     * Get a list of deadletter jobs.
     *
     */
    public function testListDeadLetterJobs()
    {
    }

    /**
     * Test case for listJobs
     *
     * Get a list of jobs.
     *
     */
    public function testListJobs()
    {
    }

    /**
     * Test case for listSuspendedJobs
     *
     * Get a list of suspended jobs.
     *
     */
    public function testListSuspendedJobs()
    {
    }

    /**
     * Test case for listTimerJobs
     *
     * Get a list of timer jobs.
     *
     */
    public function testListTimerJobs()
    {
    }
}
